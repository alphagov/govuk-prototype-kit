// Create responsive spacing, with media query for each breakpoint as set
// in settings/spacing,

// Create responsive margins
// Arguments:
// $value = top \ right \ bottom \ left \ all
@mixin govuk-responsive-margin($scale-map, $value: "all", $important: false) {
  @include govuk-responsive-spacing($scale-map, "margin", $value, $important);
}

// // Create responsive padding
// // Arguments:
// // $value = top \ right \ bottom \ left \ all
@mixin govuk-responsive-padding($scale-map, $value: "all", $important: false) {
  @include govuk-responsive-spacing($scale-map, "padding", $value, $important);
}

//  Base mixin, also used by 'generate-spacing-overrides' mixin
@mixin govuk-responsive-spacing($scale-map, $property, $value: "all", $important: false) {

  // Loop through each breakpoint
  @each $breakpoint, $breakpoint-value in $scale-map {

    // The 'null' breakpoint is for mobile.
    @if $breakpoint == null {

      @if $value == all {
        #{$property}: $breakpoint-value iff($important, !important);
      } @else {
        #{$property}-#{$value}: $breakpoint-value iff($important, !important);
      }
    } @else {
      @include mq($from: $breakpoint) {
        @if $value == all {
          #{$property}: $breakpoint-value iff($important, !important);
        } @else {
          #{$property}-#{$value}: $breakpoint-value iff($important, !important);
        }
      }
    }
  }
}
