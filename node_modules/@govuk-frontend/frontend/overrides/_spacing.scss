// Spacing directions
$spacing-directions: (
  "top": "t",
  "right": "r",
  "bottom": "b",
  "left": "l"
) !default;

// Generate spacing override classes for the given property (e.g. margin)
// for each point in the spacing scale.

// These override classes are responsive - the 'r' before the scale point
// indicates that. We might want to add non-responsive ones later.
//
// Example output:
//
// .govuk-\!-m-r0 {
//   margin: 0;
// }
//
// [..]
//
// .govuk-\!-mt-r1 {
//   margin-top: [whatever spacing point 1 is...]
// }

@mixin generate-spacing-overrides($property, $property-shorthand) {
  // For each point in the spacing scale (defined in settings), create an
  // override that affects all directions...
  @each $scale-point, $scale-map in $govuk-spacing-responsive-scale {

    .govuk-\!-#{$property-shorthand}-r#{$scale-point} {

      @include govuk-responsive-spacing($scale-map, $property, "all", true);
    }

    // ... and then an override for each individual direction
    @each $direction-name, $direction-shorthand in $spacing-directions {

      .govuk-\!-#{$property-shorthand}#{$direction-shorthand}-r#{$scale-point} {
        @include govuk-responsive-spacing($scale-map, $property, $direction-name, true);
      }
    }
  }
}

@include govuk-exports("spacing-overrides") {
  @include generate-spacing-overrides("margin", "m");
  @include generate-spacing-overrides("padding", "p");
}
